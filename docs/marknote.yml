swagger: '2.0'
info:
  version: 1.0.0
  title: MarkNote Documentation
  description: A Markdown note taking tool for managing personal information and documentation. It is designed to be
    connected to a note management API. It implements the react-simplemde-editor.
schemes:
- http
host: 'localhost:8000'
basePath: /marknote
paths:
  /browse:
    get:
      summary: Retrieve all contents of a folder
      description: Summary of all notes and folders with query parameters for specifying non-base folder.
      tags:
       - browse
      produces:
      - "application/json"
      responses:
        200:
          description: A top level JSON array with the keys "notes" and "folders" containing their respective JSON objects.
          schema:
            type: object
            properties:
              notes:
                type: array
                items:
                  $ref: "#/definitions/NoteSummary"
              folders:
                type: array
                items:
                  $ref: "#/definitions/FolderSummary"
  /note:
    post:
      summary: Create a note
      description: A request to create a note.
      tags:
      - note
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: title
        in: formData
        description: The title of the new note.
        required: true
        type: string
      - name: content
        in: formData
        description: The content of the new note.
        required: false
        type: string
      - name: folderId
        in: formData
        description: The folder to put the note in.
        required: false
        type: string
      responses:
        200:
          description: The note was created successfully.
          schema:
            $ref: "#/definitions/Note"
  /note/{id}:
    get:
      summary: Retrieve a note
      description: A request to retrieve a note.
      tags:
      - note
      produces:
      - "application/json"
      parameters: 
      - name: id
        in: path
        description: The ID of the note to retrieve
        required: true
        type: string
      responses:
        200:
          description: The note was retrieved successfully.
          schema:
            type: object
            properties:
              note:
                $ref: "#/definitions/Note"
    put:
      summary: Update a note
      description: A request to update a note.
      tags:
      - note
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters: 
      - name: id
        in: path
        description: The ID of the note to update.
        required: true
        type: string
      - name: title
        in: formData
        description: The new title of the note
        required: false
        type: string
      - name: content
        in: formData
        description: The new content of the note
        required: false
        type: string
      - name: folderId
        in: formData
        description: The new folder of the note
        required: false
        type: string
      responses:
        200:
          description: The note was updated successfully.
          schema:
            $ref: "#/definitions/Note"
    delete:
      summary: Delete a note
      description: A request to delete a note.
      tags:
      - note
      produces:
      - "application/json"
      parameters: 
      - name: id
        in: path
        description: The ID of the note to update.
        required: true
        type: string
      responses:
        204:
          description: The note was deleted successfully.
definitions:
  Note:
    type: object
    properties:
      id:
        type: string
      title:
        type: string
      content:
        type: string
      timestamp:
        type: integer
  NoteSummary:
    type: object
    properties:
      id:
        type: string
      title:
        type: string
      timestamp:
        type: integer
  Folder:
    type: object
    properties:
      id:
        type: string
      title:
        type: string
      notes:
        type: array
        items:
          $ref: "#/definitions/NoteSummary"
      folders:
        type: array
        items:
          $ref: "#/definitions/FolderSummary"
  FolderSummary:
    type: object
    properties:
      id:
        type: string
      title:
        type: string
